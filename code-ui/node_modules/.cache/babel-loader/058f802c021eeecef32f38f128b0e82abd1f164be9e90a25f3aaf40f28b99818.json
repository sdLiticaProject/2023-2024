{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dmitrydrobysh/Desktop/sdlitica/code-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/dmitrydrobysh/Desktop/sdlitica/code-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from'axios';import Cookies from'js-cookie';import*as api from'../constants/api';export var TIME_SERIES_LOADING='time_series_loading';export var TIME_SERIES_LOADING_SUCCESS='time_series_loading_success';export var TIME_SERIES_LOADING_FAIL='time_series_loading_fail';export var TIME_SERIES_CREATION='time_series_creation';export var TIME_SERIES_CREATION_SUCCESS='time_series_creation_success';export var TIME_SERIES_CREATION_FAIL='time_series_creation_fail';export var getTimeSeriesList=function getTimeSeriesList(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var token,res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:dispatch({type:TIME_SERIES_LOADING});_context.prev=1;token=Cookies.get('token');_context.next=5;return axios.get(api.timeSeriesList(),{headers:{Authorization:\"cloudToken \".concat(token)}});case 5:res=_context.sent;console.log(res);return _context.abrupt(\"return\",dispatch({type:TIME_SERIES_LOADING_SUCCESS,data:res.data}));case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);return _context.abrupt(\"return\",dispatch({type:TIME_SERIES_LOADING_FAIL,message:'Failed to load time series list'}));case 13:case\"end\":return _context.stop();}},_callee,null,[[1,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var createTimeSeries=function createTimeSeries(name,description){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){var token,res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:dispatch({type:TIME_SERIES_CREATION});_context2.prev=1;token=Cookies.get('token');_context2.next=5;return axios.post(api.timeSeriesList(),{name:name,description:description},{headers:{Authorization:\"cloudToken \".concat(token)}});case 5:res=_context2.sent;return _context2.abrupt(\"return\",dispatch({type:TIME_SERIES_CREATION_SUCCESS,data:res.data}));case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](1);return _context2.abrupt(\"return\",dispatch({type:TIME_SERIES_CREATION_FAIL,message:'Failed to load time series list'}));case 12:case\"end\":return _context2.stop();}},_callee2,null,[[1,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"names":["axios","Cookies","api","TIME_SERIES_LOADING","TIME_SERIES_LOADING_SUCCESS","TIME_SERIES_LOADING_FAIL","TIME_SERIES_CREATION","TIME_SERIES_CREATION_SUCCESS","TIME_SERIES_CREATION_FAIL","getTimeSeriesList","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","token","res","wrap","_callee$","_context","prev","next","type","get","timeSeriesList","headers","Authorization","concat","sent","console","log","abrupt","data","t0","message","stop","_x","apply","arguments","createTimeSeries","name","description","_ref2","_callee2","_callee2$","_context2","post","_x2"],"sources":["/Users/dmitrydrobysh/Desktop/sdlitica/code-ui/src/actions/timeSeries.js"],"sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport * as api from '../constants/api';\n\nexport const TIME_SERIES_LOADING = 'time_series_loading';\nexport const TIME_SERIES_LOADING_SUCCESS = 'time_series_loading_success';\nexport const TIME_SERIES_LOADING_FAIL = 'time_series_loading_fail';\n\nexport const TIME_SERIES_CREATION = 'time_series_creation';\nexport const TIME_SERIES_CREATION_SUCCESS = 'time_series_creation_success';\nexport const TIME_SERIES_CREATION_FAIL = 'time_series_creation_fail';\n\nexport const getTimeSeriesList = () => async (dispatch) => {\n  dispatch({\n    type: TIME_SERIES_LOADING,\n  });\n\n  try {\n    const token = Cookies.get('token');\n    const res = await axios.get(api.timeSeriesList(), {\n      headers: {\n        Authorization: `cloudToken ${token}`,\n      },\n    });\n    console.log(res);\n\n    return dispatch({\n      type: TIME_SERIES_LOADING_SUCCESS,\n      data: res.data,\n    });\n  } catch (error) {\n    return dispatch({\n      type: TIME_SERIES_LOADING_FAIL,\n      message: 'Failed to load time series list',\n    });\n  }\n};\n\nexport const createTimeSeries = (name, description) => async (dispatch) => {\n  dispatch({\n    type: TIME_SERIES_CREATION,\n  });\n\n  try {\n    const token = Cookies.get('token');\n    const res = await axios.post(\n      api.timeSeriesList(),\n      {\n        name,\n        description,\n      },\n      {\n        headers: {\n          Authorization: `cloudToken ${token}`,\n        },\n      },\n    );\n\n    return dispatch({\n      type: TIME_SERIES_CREATION_SUCCESS,\n      data: res.data,\n    });\n  } catch (error) {\n    return dispatch({\n      type: TIME_SERIES_CREATION_FAIL,\n      message: 'Failed to load time series list',\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}